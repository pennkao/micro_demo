// Code generated by protoc-gen-go.
// source: github.com/micro/examples/booking/api/hotel/proto/hotel.proto
// DO NOT EDIT!

/*
Package hotel is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/examples/booking/api/hotel/proto/hotel.proto

It has these top-level messages:
	Request
	Response
*/
package hotel

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import profile "github.com/micro/examples/booking/srv/profile/proto"
import rate "github.com/micro/examples/booking/srv/rate/proto"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	InDate  string `protobuf:"bytes,1,opt,name=inDate" json:"inDate,omitempty"`
	OutDate string `protobuf:"bytes,2,opt,name=outDate" json:"outDate,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Response struct {
	Hotels    []*profile.Hotel `protobuf:"bytes,1,rep,name=hotels" json:"hotels,omitempty"`
	RatePlans []*rate.RatePlan `protobuf:"bytes,2,rep,name=ratePlans" json:"ratePlans,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetHotels() []*profile.Hotel {
	if m != nil {
		return m.Hotels
	}
	return nil
}

func (m *Response) GetRatePlans() []*rate.RatePlan {
	if m != nil {
		return m.RatePlans
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "hotel.Request")
	proto.RegisterType((*Response)(nil), "hotel.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Hotel service

type HotelClient interface {
	Rates(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type hotelClient struct {
	c           client.Client
	serviceName string
}

func NewHotelClient(serviceName string, c client.Client) HotelClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "hotel"
	}
	return &hotelClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *hotelClient) Rates(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Hotel.Rates", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Hotel service

type HotelHandler interface {
	Rates(context.Context, *Request, *Response) error
}

func RegisterHotelHandler(s server.Server, hdlr HotelHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Hotel{hdlr}, opts...))
}

type Hotel struct {
	HotelHandler
}

func (h *Hotel) Rates(ctx context.Context, in *Request, out *Response) error {
	return h.HotelHandler.Rates(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/micro/examples/booking/api/hotel/proto/hotel.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x90, 0x41, 0x4b, 0xc4, 0x30,
	0x10, 0x85, 0xed, 0x4a, 0xbb, 0xee, 0x08, 0x2b, 0xe4, 0x20, 0xa5, 0xa7, 0xa5, 0x07, 0x59, 0x44,
	0x1a, 0xd8, 0x3d, 0x7a, 0x12, 0x05, 0x3d, 0x4a, 0x7e, 0x81, 0xe9, 0x32, 0x6e, 0x83, 0x6d, 0xa7,
	0x36, 0xa9, 0xf8, 0xf3, 0x25, 0xc9, 0x54, 0xaf, 0xee, 0x25, 0xcc, 0x9b, 0x37, 0xf9, 0xf2, 0x26,
	0xf0, 0x78, 0x34, 0xae, 0x99, 0xea, 0xea, 0x40, 0x9d, 0xec, 0xcc, 0x61, 0x24, 0x3e, 0xf1, 0x5b,
	0x77, 0x43, 0x8b, 0x56, 0xd6, 0x44, 0x1f, 0xa6, 0x3f, 0x4a, 0x3d, 0x18, 0xd9, 0x90, 0xc3, 0x56,
	0x0e, 0x23, 0x39, 0x8a, 0x75, 0x15, 0x6a, 0x91, 0x06, 0x51, 0x3c, 0xff, 0x97, 0x65, 0xc7, 0x2f,
	0x4f, 0x79, 0x37, 0x2d, 0x32, 0x8d, 0x55, 0xe4, 0x15, 0x0f, 0xa7, 0x80, 0x46, 0xed, 0x66, 0x8a,
	0x2f, 0x23, 0xa2, 0xbc, 0x87, 0xa5, 0xc2, 0xcf, 0x09, 0xad, 0x13, 0xd7, 0x90, 0x99, 0xfe, 0x49,
	0x3b, 0xcc, 0x93, 0x4d, 0xb2, 0x5d, 0x29, 0x56, 0x22, 0x87, 0x25, 0x4d, 0x2e, 0x18, 0x8b, 0x60,
	0xcc, 0xb2, 0x7c, 0x83, 0x0b, 0x85, 0x76, 0xa0, 0xde, 0xa2, 0xb8, 0x81, 0x2c, 0x6c, 0x67, 0xf3,
	0x64, 0x73, 0xbe, 0xbd, 0xdc, 0xad, 0xab, 0x39, 0xeb, 0x8b, 0x6f, 0x2b, 0x76, 0xc5, 0x1d, 0xac,
	0xfc, 0xf3, 0xaf, 0xad, 0xee, 0x6d, 0xbe, 0xe0, 0xd1, 0x10, 0x48, 0x71, 0x5b, 0xfd, 0x0d, 0xec,
	0xf6, 0x90, 0x86, 0xeb, 0xe2, 0x16, 0x52, 0xef, 0x5b, 0xb1, 0xae, 0xe2, 0x8f, 0x72, 0xea, 0xe2,
	0xea, 0x57, 0xc7, 0x20, 0xe5, 0x59, 0x9d, 0x85, 0xd5, 0xf6, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x21, 0xbb, 0xb6, 0x1a, 0xb4, 0x01, 0x00, 0x00,
}
