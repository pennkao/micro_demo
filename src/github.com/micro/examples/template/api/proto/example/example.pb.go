// Code generated by protoc-gen-go.
// source: github.com/micro/examples/template/api/proto/example/example.proto
// DO NOT EDIT!

/*
Package go_micro_api_template is a generated protocol buffer package.

It is generated from these files:
	github.com/micro/examples/template/api/proto/example/example.proto

It has these top-level messages:
*/
package go_micro_api_template

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import go_micro_api "github.com/micro/go-api/proto"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Example service

type ExampleClient interface {
	Call(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error)
}

type exampleClient struct {
	c           client.Client
	serviceName string
}

func NewExampleClient(serviceName string, c client.Client) ExampleClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.api.template"
	}
	return &exampleClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *exampleClient) Call(ctx context.Context, in *go_micro_api.Request, opts ...client.CallOption) (*go_micro_api.Response, error) {
	req := c.c.NewRequest(c.serviceName, "Example.Call", in)
	out := new(go_micro_api.Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Example service

type ExampleHandler interface {
	Call(context.Context, *go_micro_api.Request, *go_micro_api.Response) error
}

func RegisterExampleHandler(s server.Server, hdlr ExampleHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Example{hdlr}, opts...))
}

type Example struct {
	ExampleHandler
}

func (h *Example) Call(ctx context.Context, in *go_micro_api.Request, out *go_micro_api.Response) error {
	return h.ExampleHandler.Call(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/micro/examples/template/api/proto/example/example.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x72, 0x4a, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0xcd, 0x4c, 0x2e, 0xca, 0xd7, 0x4f, 0xad, 0x48,
	0xcc, 0x2d, 0xc8, 0x49, 0x2d, 0xd6, 0x2f, 0x49, 0xcd, 0x2d, 0xc8, 0x49, 0x2c, 0x49, 0xd5, 0x4f,
	0x2c, 0xc8, 0xd4, 0x2f, 0x28, 0xca, 0x2f, 0x81, 0xcb, 0xc1, 0x68, 0x3d, 0xb0, 0xa8, 0x90, 0x68,
	0x7a, 0xbe, 0x1e, 0x58, 0xaf, 0x5e, 0x62, 0x41, 0xa6, 0x1e, 0x4c, 0x9b, 0x94, 0x3a, 0x86, 0xd1,
	0xe9, 0xf9, 0xba, 0x08, 0xb3, 0x40, 0x6a, 0xc1, 0x2c, 0x23, 0x27, 0x2e, 0x76, 0x57, 0x88, 0x81,
	0x42, 0xe6, 0x5c, 0x2c, 0xce, 0x89, 0x39, 0x39, 0x42, 0xa2, 0x7a, 0x28, 0x66, 0x06, 0xa5, 0x16,
	0x96, 0xa6, 0x16, 0x97, 0x48, 0x89, 0xa1, 0x0b, 0x17, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x2a, 0x31,
	0x24, 0xb1, 0x81, 0x8d, 0x32, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x0a, 0x33, 0x43, 0xd0,
	0x00, 0x00, 0x00,
}
